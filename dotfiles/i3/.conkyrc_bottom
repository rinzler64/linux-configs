### Conky configuration file
## Output is printed to the console -> i3bar
# Modified: 27.11.2011 - mseed : http://www.fastlinux.eu

### 
# use_xft yes
# xftfont DejaVu:size=12
# xftalpha 0.9

## No output to X <yes/no>
out_to_x no

## Create own window to draw <yes/no>
own_window no

## Print everything to console?
out_to_console yes

## Use double buffering (reduces flicker, not needed for console output)
double_buffer no

## Set to yes if you want Conky to be forked in the background
background no

## Update interval in seconds
update_interval 1.0

## This is the number of times Conky will update before quitting.
## Set to zero to run forever.
total_run_times 0

## Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
short_units yes

## How strict should if_up be when testing an interface for being up?
## The value is one of up, link or address, to check for the interface
## being solely up, being up and having link or being up, having link
## and an assigned IP address. 
if_up_strictness address

## Add spaces to keep things from moving about?  This only affects certain objects.
## use_spacer should have an argument of left, right, or none
#use_spacer left

## Force UTF8? note that UTF8 support required XFT
override_utf8_locale no

## number of cpu samples to average
## set to 1 to disable averaging
cpu_avg_samples 2

## Sensors examples
# Top Process: ${top name 1}
# Root: {fs_used /}/${fs_size /} /home ${fs_free /home} /${fs_size /home}
# Load: ${loadavg 1} ${loadavg 2} ${loadavg 3} 
# Load: $loadavg
# Swap: ${swap}/${swapmax} (${swapperc}%)
# Processes: ${running_processes} / ${processes}
# CPU: $cpu% 
# HDD: $diskio_read :Read $diskio_write :Write
# Temp: Core0: ${exec sensors | awk '/Core 0/ {print $3}'} Core1: ${exec sensors | awk '/Core 1/ {print $3}'}
# Freq: ${freq cpu0}Mhz
# Uptime: $uptime
# Kernel:$kernel on $machine
# Name: $nodename - $sysname
# Battery: ${battery_percent BAT0}%

## Stuff after 'TEXT' will be formatted on screen
TEXT
# Linux info
${exec whoami}@${exec uname -n} | ${exec uname -s} ${exec uname -m} | ${exec uname -r} | \
# Free space on /home
home ${fs_free /home} ${fs_type /home} | \
# Free space on /
root ${fs_free /} ${fs_type /} | \
# Ethernet status
# ${if_up enp0s25}Eth ${addr enp0s25} | extIP: ${exec curl https://icanhazip.com/} | ${endif}\
# Wireless status
# ${if_up wlp3s0}WiFi ${addr wlp3s0} | SIG ${wireless_link_qual wlp3s0} | ${wireless_bitrate} | extIP: ${exec curl https://icanhazip.com/} | ${endif}\
# Current Volume
# VOL ${exec pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 2 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'}% | \
# CPU stats
CPU ${cpu cpu0}% ${freq_g 0}GHz ${exec sensors | grep -m 0 "Core 0"|awk '{print $3}'} | \
# RAM in use
RAM ${memperc}% | \
# Battery
# BAT ${battery} ${battery_time} | uptime: ${uptime} | \
# Time
# ${time %a %d.%m.%y} ${time %H:%M:%S} | \
# Weather temperature
#${exec weather --headers="Temperature" -q | awk '/Temperature/ {print $2}'}C ${exec weather --headers="Sky conditions" -q | awk '/Sky conditions/ {print $3 " " $4}'} | \
# Volume %
# Vol: ${mixer}
# V ${exec pactl list sinks | grep "Volume: 0"| tail -n 1 | awk '{print substr($3, 1, index($3, "%") - 1)}'}%
